// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_2eproto();
void protobuf_InitDefaults_test_2eproto();
void protobuf_AssignDesc_test_2eproto();
void protobuf_ShutdownFile_test_2eproto();

class Test;

// ===================================================================

class Test : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Test) */ {
 public:
  Test();
  virtual ~Test();

  Test(const Test& from);

  inline Test& operator=(const Test& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Test& default_instance();

  static const Test* internal_default_instance();

  void Swap(Test* other);

  // implements Message ----------------------------------------------

  inline Test* New() const { return New(NULL); }

  Test* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Test& from);
  void MergeFrom(const Test& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Test* other);
  void UnsafeMergeFrom(const Test& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 v1 = 1;
  int v1_size() const;
  void clear_v1();
  static const int kV1FieldNumber = 1;
  ::google::protobuf::int32 v1(int index) const;
  void set_v1(int index, ::google::protobuf::int32 value);
  void add_v1(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      v1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_v1();

  // @@protoc_insertion_point(class_scope:Test)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > v1_;
  friend void  protobuf_InitDefaults_test_2eproto_impl();
  friend void  protobuf_AddDesc_test_2eproto_impl();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Test> Test_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Test

// repeated int32 v1 = 1;
inline int Test::v1_size() const {
  return v1_.size();
}
inline void Test::clear_v1() {
  v1_.Clear();
}
inline ::google::protobuf::int32 Test::v1(int index) const {
  // @@protoc_insertion_point(field_get:Test.v1)
  return v1_.Get(index);
}
inline void Test::set_v1(int index, ::google::protobuf::int32 value) {
  v1_.Set(index, value);
  // @@protoc_insertion_point(field_set:Test.v1)
}
inline void Test::add_v1(::google::protobuf::int32 value) {
  v1_.Add(value);
  // @@protoc_insertion_point(field_add:Test.v1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Test::v1() const {
  // @@protoc_insertion_point(field_list:Test.v1)
  return v1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Test::mutable_v1() {
  // @@protoc_insertion_point(field_mutable_list:Test.v1)
  return &v1_;
}

inline const Test* Test::internal_default_instance() {
  return &Test_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
